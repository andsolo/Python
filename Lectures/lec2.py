"""
# Списки — это порядочный конечный набор элементов.

list_1 = [] - создание пустого списка
list_2 = list() - создание пустого списка
list_1 = [1, 2, 3, 4, 5, 6]
print(len(list_1)) - количество элементов в списке 
print(list_1[3]) - поэлементное обращение (если ввести [-1], то список будет выводиться с конца)
list_1.append(8) - добавление элемента в конец списка 
print(list_1.pop()) - удаление последнего элемента в списке.

Также с помощью фунции можно удалять элемент по индексу.
Например: 
print(list_1.pop(0)) - удаление первого элемента в списке
print(list_1.insert(2, 11)) - добавление элемента на нужную позицию |(позиция, элемент)|
print(list_1[:]) - вывод всех элементов списка
print(list_1[:2]) - вывод всех элементов до индекса [2] - |[0, 1]|
print(list_1[2:9]) - вывод интервала списка
print(list_1[len(list_1)-2:] - вывод последних двух элементов, начиная с предпоследнего элемента
_____________________________________________________________________
Кортеж - это неизменяемый список
t = () - создание пустого кортежа 
t = (1,) - кортеж со значением, после последнего элемента всегда ставится запятая (обозн. кортежа)

Любой список можно трансформировать в кортеж, для этого:
v = [1, 2, 3] - создаем список
v = tuple(v) - трансформируем в кортеж

В целом, кортеж это тот же самый список, только его нельзя изменять 
_____________________________________________________________________
Словари - неупорядоченные коллекции произвольных обьектов с доступом по ключу. 
В списках в качестве ключа используется индекс элемента. В словаре для определения элемента 
используется значение ключа.

d = {} - создаем пустой словарь 
d = dict() - иной способ создания пустого словаря

d['q'] = 'qwerty' - пример заполнения 
dictionary = {'up': 'наверх', 'left': 'влево'} - иной пример заполнения 
del dictionary['left'] - удаление элемента в словаре

for item in dictionary:                             - взаимодействие цикла for с словарем
    print('{}: {}'.format(item, dictionary[item]))  - вывод -- up: наверх
_____________________________________________________________________
Множества - содержат в себе уникальные элементы, не обязательно упорядоченные.
Одно множество может содержать значения любых типов. Если у вас есть два множества, 
то над ними можно совершать любые стандартные оперции, например, обьединение,
пересечение и разность. 

colors = {'red', 'green', 'blue'} - создание множества (тоже самое что и словарь, но без ключа)
colors.add('grey') - добавление элементов в множество (важно! в множестве могут только уникальные элементы)
colors.remove('red') - прямое удаление элемента (при повторе строки в коде возникнет ошибка)
colors.discard('red') - проверка наличия элемента и его последующее удаление 
colors.clear() - полное удаление всех элементов из множества

Операции со множествами:
a = {1, 2, 3, 5, 8}
b = {2, 5, 8, 13, 21}
c = a.copy() -- c = {1, 2, 3, 5, 8}
u = a.union(b) - обьединение множеств (a & b) u = {1, 2, 3, 5, 8, 13, 21}, но только уникальные элементы
i = a.intersection(b) - пересечение множеств (a & b)
d1 = a.difference(b) - из множества a отнять множество b {1, 3} (только по схожим элементам)
dr = b.difference(a) - из множества b отнять множество a {13, 21} (только по схожим элементам)
q = a.union(b).difference(a.intersection(b)) {1, 21, 3, 13}

Замороженное множество:
a = {1, 8, 6}
b = frozenset(a) - замороженное множество отличается только тем, что его нельзя изменять 








"""